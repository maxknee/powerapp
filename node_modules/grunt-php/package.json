{
  "name": "grunt-php",
  "version": "0.3.2",
  "description": "Start a PHP-server",
  "keywords": [
    "gruntplugin",
    "server",
    "php"
  ],
  "homepage": "https://github.com/sindresorhus/grunt-php",
  "bugs": {
    "url": "https://github.com/sindresorhus/grunt-php/issues"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/sindresorhus/grunt-php.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "dependencies": {
    "open": "0.0.4"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-simple-mocha": "~0.4.0",
    "grunt-contrib-watch": "~0.5.3",
    "request": "~2.30.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "readme": "# grunt-php [![Build Status](https://secure.travis-ci.org/sindresorhus/grunt-php.png?branch=master)](http://travis-ci.org/sindresorhus/grunt-php) [![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\n\n*Requires PHP 5.4.0+*\n\n> Start a [PHP-server](http://php.net/manual/en/features.commandline.webserver.php)\n\nPretty much a drop-in replacement for [grunt-contrib-connect](https://github.com/gruntjs/grunt-contrib-connect). Useful for eg. running tests on a PHP project. Uses the built-in server in PHP 5.4.0+.\n\n*Doesn't have a `middleware` option as grunt-contrib-connect does.*\n\n\n## Getting Started\n\nIf you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a [gruntfile][Getting Started] as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n\n```shell\nnpm install grunt-php --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-php');\n```\n\n*Tip: the [load-grunt-tasks](https://github.com/sindresorhus/load-grunt-tasks) module makes it easier to load multiple grunt tasks.*\n\n\n[grunt]: http://gruntjs.com\n[Getting Started]: https://github.com/gruntjs/grunt/wiki/Getting-started\n\n\n## Documentation\n\n\n### Example usage\n\n\n#### Start a short-lived PHP-server\n\nUseful for you need to fire up a PHP-server for running unit tests or something.\n\n```javascript\ngrunt.initConfig({\n\tphp: {\n\t\tdist: {\n\t\t\toptions: {\n\t\t\t\tport: 5000\n\t\t\t}\n\t\t}\n\t}\n});\n\ngrunt.registerTask('default', ['php']);\n```\n\nRun this with `grunt php` or `grunt php:dist`.\n\n\n#### Start a persistent PHP-server and open in browser\n\n```javascript\ngrunt.initConfig({\n\tphp: {\n\t\ttest: {\n\t\t\toptions: {\n\t\t\t\tkeepalive: true,\n\t\t\t\topen: true\n\t\t\t}\n\t\t}\n\t}\n});\n\ngrunt.registerTask('test', ['php', 'mocha']);\n```\n\n\n#### Use it with [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch)\n\n```javascript\ngrunt.initConfig({\n\tphp: {\n\t\twatch: {}\n\t}\n});\n\ngrunt.registerTask('phpwatch', ['php:watch', 'watch']);\n```\n\n\n### Options\n\n#### port\n\nType: `Integer`  \nDefault: `8000`\n\nThe port on which you want to access the webserver. Task will fail if the port is already in use.\n\n#### hostname\n\nType: `String`  \nDefault: `'127.0.0.1'` *(usually same as `localhost`)*\n\nThe hostname the webserver will use.\n\nUse `0.0.0.0` if you want it to be accessible from the outside.\n\n#### base\n\nType: `String`  \nDefault: `'.'`\n\nFrom which folder the webserver will be served. Defaults to the directory of the Gruntfile.\n\n#### keepalive\n\nType: `Boolean`  \nDefault: `false`\n\nKeep the server alive indefinitely. Any task specified after this will not run.\n\nThis option can also be enabled ad-hoc by running the task like `grunt php:targetname:keepalive`\n\n#### open\n\nType: `Boolean`  \nDefault: `false`\n\nOpen the server in the browser when the task is triggered.\n\n#### router\n\nType: `String`  \n\nOptionally specify the path to a [router script](http://php.net/manual/en/features.commandline.webserver.php#example-380) that is run at the start of each HTTP request. If this script returns `false`, then the requested resource is returned as-is. Otherwise the script's output is returned to the browser.\n\nExample router script:\n\n```php\n<?php\n// router.php\nif (preg_match('/\\.(?:png|jpg|jpeg|gif)$/', $_SERVER[\"REQUEST_URI\"])) {\n\treturn false;    // serve the requested resource as-is\n} else {\n\techo \"<p>Thanks for using grunt-php :)</p>\";\n}\n?>\n```\n\n#### bin\n\nType: `String`  \nDefault: `'php'`\n\nSpecify a custom path to the PHP binary. Useful if you have multiple versions of PHP installed.\n\n\n## License\n\nMIT License • © [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "_id": "grunt-php@0.3.2",
  "_from": "grunt-php@"
}
