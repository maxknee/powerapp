{
  "name": "grunt-php-analyzer",
  "description": "Grunt interface to php-analyzer",
  "version": "0.1.0",
  "homepage": "https://github.com/chrsm/grunt-php-analyzer",
  "author": {
    "name": "Christopher Martinez",
    "email": "chris@buysellads.com",
    "url": "http://chrsm.org"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/chrsm/grunt-php-analyzer.git"
  },
  "bugs": {
    "url": "https://github.com/chrsm/grunt-php-analyzer/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/chrsm/grunt-php-analyzer/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.4.3",
    "grunt-contrib-clean": "~0.4.1",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-php-analyzer\n\n> Grunt interface to php-analyzer\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-php-analyzer --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-php-analyzer');\n```\n\n## The \"php_analyzer\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `php_analyzer` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  php_analyzer: {\n    options: {\n      bin: 'path/to/phpalizer',\n    },\n    your_target: {\n      dir: 'directory/to/analyze',\n      command: 'run', /** also possible to use a target to automatically build the db/run any phpalizer command **/\n    },\n  },\n})\n```\n\n## Release History\n0.1.0 2013/04/23\n\n## Thanks\nTo the grunt-phpcs plugin, which I used to figure out how to write this plugin (pretty much 1:1).",
  "readmeFilename": "README.md",
  "_id": "grunt-php-analyzer@0.1.0",
  "_from": "grunt-php-analyzer@"
}
